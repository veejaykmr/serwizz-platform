<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" default-activation="lazy">

	<reference id="sharedNettyHttpServer" interface="org.apache.camel.component.netty4.http.NettySharedHttpServer"/>

    <!--
        This Camel context contains the routes that interact with our BPMN process
    -->
    <camelContext id="activitiCamelContext" xmlns="http://camel.apache.org/schema/blueprint">
		<!-- dataFormats>
			<json id="jackson" library="Jackson" unmarshalTypeName="org.serwizz.camel.activiti.example.Order"/>
		</dataFormats-->
    
    	<!--  routeBuilder ref="activitiRouteBuilder"/-->
    	
	  <restConfiguration bindingMode="auto" component="netty4-http" > 
	     <endpointProperty key="nettySharedHttpServer" value="#sharedNettyHttpServer" /> 
	  </restConfiguration> 
	
	  <rest path="/say">
	    <get uri="/hello">
	      <to uri="direct:hello"/>
	    </get>
	    <get uri="/bye">
	      <to uri="direct:bye"/>
	    </get>
	  </rest>
	  
	  <rest path="/example" bindingMode="json">
	  	<post uri="/orders" consumes="application/json" type="org.serwizz.camel.activiti.example.Order">
	  		<to uri="direct:processOrder"/>
	  	</post>
	  </rest>
	
	  <route>
	  	<from uri="direct:processOrder"/>
  		<log message="Processing order ${body}"/>
  		<to uri="activiti:OrderProcess"/>
	  </route>
	  
	  <route>
	  	<from uri="activiti:OrderProcess:processOrder?copyVariablesToProperties=true"/>
	  	<to uri="bean:processOrderBean"/>
	  	<to uri="bean:responseOrderBean"/>
	  	<log message="Processing order completed ${body}"/>
	  </route>
	  
	  <route>
	    <from uri="direct:hello"/>
	    <transform>
	      <constant>Hello World</constant>
	    </transform>
	  </route>
	  <route>
	    <from uri="direct:bye"/>
	    <transform>
	      <constant>Bye World</constant>
	    </transform>
	  </route>
    	
    </camelContext>

	<bean id="processOrderBean" class="org.serwizz.camel.activiti.example.ProcessOrderBean"/>
	<bean id="responseOrderBean" class="org.serwizz.camel.activiti.example.ResponseOrderBean"/>
	
	<bean id="activitiRouteBuilder" class="org.serwizz.camel.activiti.example.ActivitiRouteBuilder"/>
	
    <!--
        Obtain a reference to Activiti's RuntimeService - this reference will automatically
        be picked up by the subsequent Activiti Camel component definition
    -->
    <reference id="runtimeService" interface="org.activiti.engine.RuntimeService" />

    <!--
        Register a context provider to link the Camel context to the OrderProcess definition.
        Doing this will allow your BPMN process to communicate with the Camel routes using the
        ${camel} expression
    -->
    <service interface="org.activiti.camel.ContextProvider">
        <bean class="org.activiti.camel.SimpleContextProvider">
            <argument value="OrderProcess"/>
            <argument ref="activitiCamelContext"/>
        </bean>
    </service>

</blueprint>